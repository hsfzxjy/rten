[workspace]
members = [
  ".",
  "rten-cli",
  "rten-imageio",
  "rten-imageproc",
  "rten-tensor",
  "rten-text",

  # Development crates. These are not published.
  "rten-bench",
  "rten-examples",
]
default-members = [
  ".",
  "rten-imageproc",
  "rten-tensor",
  "rten-text"
]

[package]
name = "rten"
version = "0.7.0"
edition = "2021"
authors = ["Robert Knight"]
description = "Machine learning runtime"
license = "MIT OR Apache-2.0"
homepage = "https://github.com/robertknight/rten"
repository = "https://github.com/robertknight/rten"
resolver = "2"
include = ["/src", "/CHANGELOG.md", "/README.md"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
flatbuffers = "22.10.26"
libm = "0.2.6"
rayon = "1.7.0"
smallvec = { version = "1.10.0", features = ["union", "const_generics", "const_new"] }
rten-tensor = { path = "./rten-tensor", version = "0.7.0" }
rten-vecmath = { path = "./rten-vecmath", version = "0.7.0" }
fastrand = { version = "2.0.2", optional = true }

[dev-dependencies]
rten = { path = ".", features = ["random"] }
rten-bench = { path = "./rten-bench" }
serde_json = "1.0.91"

[lib]
crate-type = ["lib", "cdylib"]

[features]
# Use AVX-512 instructions if available. Requires nightly Rust for AVX-512 intrinsics.
avx512 = ["rten-vecmath/avx512"]
# Generate WebAssembly API using wasm-bindgen.
wasm_api = []
# Enable operators that generate random numbers.
random = ["fastrand"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2.83"

[lints.clippy]
# `assert!(const)` effectively used as a static assert, which compiler will
# optimize away.
assertions_on_constants = "allow"
# Clippy frequently suggests to replace for loops with const bounds (often used
# in performance-critical loops) with iterators, which is more verbose and
# potentially less efficient.
needless_range_loop = "allow"
too_many_arguments = "allow"
